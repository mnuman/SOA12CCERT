<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Mar 11 10:59:12 CET 2015
  Author:  milco
  Type: BPEL 2.0 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="EDNProducer"
               targetNamespace="http://xmlns.oracle.com/SOA12CCERT/EDNPersistency/EDNProducer"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/SOA12CCERT/EDNPersistency/EDNProducer"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns1="http://xmlns.oracle.com/SOA12CCERT/EDNPersistency/myEventDefinitions">
  <import namespace="http://xmlns.oracle.com/SOA12CCERT/EDNPersistency/EDNProducer"
          location="../Schemas/EDNProducer.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
  <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/SOA12CCERT/EDNPersistency/EDNProducer" location="../WSDLs/EDNProducer.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="ednproducer_client" partnerLinkType="client:EDNProducer" myRole="EDNProducerProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:EDNProducerRequestMessage"/>
    <variable name="myEventToPublish" element="client:process"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in EDNProducer.wsdl) -->
    <receive name="receiveInput" partnerLink="ednproducer_client" portType="client:EDNProducer" operation="process" variable="inputVariable" createInstance="yes"/>
    <assign name="prepareEventToPublish">
      <copy>
        <from>$inputVariable.payload/client:input</from>
        <to>$myEventToPublish/client:input</to>
      </copy>
    </assign>
    <invoke name="publishEvent" bpelx:eventName="ns1:myFirstEvent"
            inputVariable="myEventToPublish" bpelx:invokeAsDetail="no"/>
  </sequence>
</process>